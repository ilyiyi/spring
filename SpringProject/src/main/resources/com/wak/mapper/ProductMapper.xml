<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wak.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.wak.domain.Product">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from product
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="batchDelete">
        delete from product
        where id in
        <foreach collection="ids" separator="," open="(" close=")" item="id" index="index">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wak.domain.Product" useGeneratedKeys="true">
        insert into product (name, price, remark,
                             create_time, create_id, update_time,
                             update_id)
        values (#{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
                #{updateId,jdbcType=BIGINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.wak.domain.Product">
        update product
        set name        = #{name,jdbcType=VARCHAR},
            price       = #{price,jdbcType=DOUBLE},
            remark      = #{remark,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            update_id   = #{updateId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               name,
               price,
               remark,
               create_time,
               create_id,
               update_time,
               update_id
        from product
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               name,
               price,
               remark,
               create_time,
               create_id,
               update_time,
               update_id
        from product
    </select>
    <select id="list" resultMap="BaseResultMap">
        select p.*,u.name createName,u1.name updateName from product p
        left join user u on p.create_id = u.id
        left join user u1 on p.update_id = u1.id
        <where>
            <if test="name != null">
                p.name like concat('%',#{name},'%')
            </if>
        </where>
    </select>
</mapper>